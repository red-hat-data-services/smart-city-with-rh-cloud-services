kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: generator
  labels:
    app: generator
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - generator
        from:
          kind: ImageStreamTag
          name: "generator:latest"
    - type: ConfigChange
  replicas: 0
  revisionHistoryLimit: 5
  test: false
  selector:
    app: generator
    deploymentconfig: generator
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: generator
        deploymentconfig: generator
    spec:
      containers:
        - name: generator
          image: generator:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: SERVICE_POINT
              valueFrom:
                configMapKeyRef:
                  name: generator-dataset
                  key: BUCKET_HOST
            - name: BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: generator-dataset
                  key: BUCKET_NAME
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: generator-dataset
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: generator-dataset
                  key: AWS_SECRET_ACCESS_KEY
            - name: KAFKA_ENDPOINT
              value: edge-kafka-kafka-bootstrap:9092
            - name: KAFKA_TOPIC
              value: lpr
            - name: SECONDS_WAIT
              value: "1"
            - name: LPR_SERVICE_URL
              value: lpr-service:8080
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
